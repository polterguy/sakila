/*
 * Automatically generated by Magic
 */

import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { TranslateModule } from '@ngx-translate/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { MaterialModule } from './material.module';

import { CoreModule } from '@core';
import { SharedModule } from '@shared';
import { AuthModule } from '@app/auth';
import { HomeModule } from './home/home.module';
import { ShellModule } from './shell/shell.module';
import { AppComponent } from './app.component';
import { AppRoutingModule } from './app-routing.module';
import { environment } from '@env/environment';
import { JwtModule } from '@auth0/angular-jwt';
import { OwlDateTimeModule, OwlNativeDateTimeModule } from '@danielmoncada/angular-datetime-picker';
import { FormatDatePipe } from './pipes/format-date-pipe';

// Generated CRUD components here.
import { ActorComponent } from './components/actor/actor.component';
import { EditActorComponent } from './components/actor/modals/edit.actor.component';
import { AddressComponent } from './components/address/address.component';
import { EditAddressComponent } from './components/address/modals/edit.address.component';
import { CategoryComponent } from './components/category/category.component';
import { EditCategoryComponent } from './components/category/modals/edit.category.component';
import { CityComponent } from './components/city/city.component';
import { EditCityComponent } from './components/city/modals/edit.city.component';
import { CountryComponent } from './components/country/country.component';
import { EditCountryComponent } from './components/country/modals/edit.country.component';
import { CustomerComponent } from './components/customer/customer.component';
import { EditCustomerComponent } from './components/customer/modals/edit.customer.component';
import { Film_actorComponent } from './components/film_actor/film_actor.component';
import { EditFilm_actorComponent } from './components/film_actor/modals/edit.film_actor.component';
import { Film_categoryComponent } from './components/film_category/film_category.component';
import { EditFilm_categoryComponent } from './components/film_category/modals/edit.film_category.component';
import { FilmComponent } from './components/film/film.component';
import { EditFilmComponent } from './components/film/modals/edit.film.component';
import { InventoryComponent } from './components/inventory/inventory.component';
import { EditInventoryComponent } from './components/inventory/modals/edit.inventory.component';
import { LanguageComponent } from './components/language/language.component';
import { EditLanguageComponent } from './components/language/modals/edit.language.component';
import { PaymentComponent } from './components/payment/payment.component';
import { EditPaymentComponent } from './components/payment/modals/edit.payment.component';
import { RentalComponent } from './components/rental/rental.component';
import { EditRentalComponent } from './components/rental/modals/edit.rental.component';
import { StaffComponent } from './components/staff/staff.component';
import { EditStaffComponent } from './components/staff/modals/edit.staff.component';
import { StoreComponent } from './components/store/store.component';
import { EditStoreComponent } from './components/store/modals/edit.store.component';


@NgModule({
  imports: [
    OwlDateTimeModule,
    OwlNativeDateTimeModule,
    BrowserModule,
    FormsModule,
    ReactiveFormsModule,
    HttpClientModule,
    TranslateModule.forRoot(),
    BrowserAnimationsModule,
    MaterialModule,
    CoreModule,
    SharedModule,
    ShellModule,
    HomeModule,
    AuthModule,
    JwtModule.forRoot({
      config: {
        tokenGetter: () => {
          const persisted = sessionStorage.getItem('credentials') || localStorage.getItem('credentials');
          if (persisted) {
            return JSON.parse(persisted).token;
          }
          return null;
        },
        allowedDomains: [environment.apiDomain],
      },
    }),
    AppRoutingModule, // must be imported as the last module as it contains the fallback route
  ],
  declarations: [
    AppComponent,
    FormatDatePipe,

// Generated CRUD components here.
    ActorComponent,
    EditActorComponent,
    AddressComponent,
    EditAddressComponent,
    CategoryComponent,
    EditCategoryComponent,
    CityComponent,
    EditCityComponent,
    CountryComponent,
    EditCountryComponent,
    CustomerComponent,
    EditCustomerComponent,
    Film_actorComponent,
    EditFilm_actorComponent,
    Film_categoryComponent,
    EditFilm_categoryComponent,
    FilmComponent,
    EditFilmComponent,
    InventoryComponent,
    EditInventoryComponent,
    LanguageComponent,
    EditLanguageComponent,
    PaymentComponent,
    EditPaymentComponent,
    RentalComponent,
    EditRentalComponent,
    StaffComponent,
    EditStaffComponent,
    StoreComponent,
    EditStoreComponent,
  ],

  providers: [],
  bootstrap: [AppComponent],
})
export class AppModule {}
